import * as lc from '../process/condition';

export const ConditionOpcode = [
    { opcode: 0x00, command: 'COL', callback: lc.COL, operand: 'Uint8:actor' },
    { opcode: 0x01, command: 'COL_OBJ', callback: lc.COL_OBJ, param: 'Uint8:actor', operand: 'Uint8:actor' },
    { opcode: 0x02, command: 'DISTANCE', callback: lc.DISTANCE, param: 'Uint8:actor', operand: 'Uint16' },
    { opcode: 0x03, command: 'ZONE', callback: lc.ZONE, operand: 'Uint8:zone' },
    { opcode: 0x04, command: 'ZONE_OBJ', callback: lc.ZONE_OBJ, param: 'Uint8:actor', operand: 'Uint8:zone' },
    { opcode: 0x05, command: 'BODY', callback: lc.BODY, operand: 'Uint8' },
    { opcode: 0x06, command: 'BODY_OBJ', callback: lc.BODY_OBJ, param: 'Uint8:actor', operand: 'Uint8' },
    { opcode: 0x07, command: 'ANIM', callback: lc.ANIM, operand: 'Uint16' },
    { opcode: 0x08, command: 'ANIM_OBJ', callback: lc.ANIM_OBJ, param: 'Uint8:actor', operand: 'Uint16' },
    { opcode: 0x09, command: 'CURRENT_TRACK', callback: lc.CURRENT_TRACK, operand: 'Uint8' },
    { opcode: 0x0A, command: 'CURRENT_TRACK_OBJ', callback: lc.CURRENT_TRACK_OBJ, param: 'Uint8:actor', operand: 'Uint8' },
    { opcode: 0x0B, command: 'VAR_CUBE', callback: lc.VAR_CUBE, param: 'Uint8:varcube', operand: 'Uint8:varcube_value' },
    { opcode: 0x0C, command: 'CONE_VIEW', callback: lc.CONE_VIEW, param: 'Uint8', operand: 'Uint16' },
    { opcode: 0x0D, command: 'HIT_BY', callback: lc.HIT_BY, operand: 'Uint8' },
    { opcode: 0x0E, command: 'ACTION', callback: lc.ACTION, operand: 'Uint8' },
    { opcode: 0x0F, command: 'VAR_GAME', callback: lc.VAR_GAME, param: 'Uint8:vargame', operand: 'Uint16:vargame_value' },
    { opcode: 0x10, command: 'LIFE_POINT', callback: lc.LIFE_POINT, operand: 'Uint16' },
    { opcode: 0x11, command: 'LIFE_POINT_OBJ', callback: lc.LIFE_POINT_OBJ, param: 'Uint8:actor', operand: 'Uint16' },
    { opcode: 0x12, command: 'NUM_LITTLE_KEYS', callback: lc.NUM_LITTLE_KEYS, operand: 'Uint8' },
    { opcode: 0x13, command: 'NUM_GOLD_PIECES', callback: lc.NUM_GOLD_PIECES, operand: 'Uint16' },
    { opcode: 0x14, command: 'BEHAVIOUR', callback: lc.BEHAVIOUR, operand: 'Uint8' },
    { opcode: 0x15, command: 'CHAPTER', callback: lc.CHAPTER, operand: 'Uint8' },
    { opcode: 0x16, command: 'DISTANCE_3D', callback: lc.DISTANCE_3D, param: 'Uint8:actor', operand: 'Uint16' },
    { opcode: 0x17, command: 'MAGIC_LEVEL', callback: lc.MAGIC_LEVEL, operand: 'Uint8' },
    { opcode: 0x18, command: 'MAGIC_POINT', callback: lc.MAGIC_POINT, operand: 'Uint8' },
    { opcode: 0x19, command: 'USE_INVENTORY', callback: lc.USE_INVENTORY, param: 'Uint8', operand: 'Uint8' },
    { opcode: 0x1A, command: 'CHOICE', callback: lc.CHOICE, operand: 'Uint16:choice_value' },
    { opcode: 0x1B, command: 'FUEL', callback: lc.FUEL, operand: 'Uint8' },
    { opcode: 0x1C, command: 'CARRIED_BY', callback: lc.CARRIED_BY, operand: 'Uint8' },
    { opcode: 0x1D, command: 'CDROM', callback: lc.CDROM, operand: 'Uint8' },
    { opcode: 0x1E, command: 'LADDER', callback: lc.LADDER, operand: 'Uint8' },
    { opcode: 0x1F, command: 'RND', callback: lc.RND, param: 'Uint8', operand: 'Uint8' },
    { opcode: 0x20, command: 'RAIL', callback: lc.RAIL, param: 'Uint8', operand: 'Uint8' },
    { opcode: 0x21, command: 'BETA', callback: lc.BETA, operand: 'Uint16' },
    { opcode: 0x22, command: 'BETA_OBJ', callback: lc.BETA_OBJ, param: 'Uint8:actor', operand: 'Uint16' },
    { opcode: 0x23, command: 'CARRIED_OBJ_BY', callback: lc.CARRIED_OBJ_BY, param: 'Uint8:actor', operand: 'Uint8' },
    { opcode: 0x24, command: 'ANGLE', callback: lc.ANGLE, param: 'Uint8', operand: 'Uint16' },
    { opcode: 0x25, command: 'DISTANCE_MESSAGE', callback: lc.DISTANCE_MESSAGE, param: 'Uint8:actor', operand: 'Uint16' },
    { opcode: 0x26, command: 'HIT_OBJ_BY', callback: lc.HIT_OBJ_BY, param: 'Uint8:actor', operand: 'Uint8' },
    { opcode: 0x27, command: 'REAL_ANGLE', callback: lc.REAL_ANGLE, param: 'Uint8', operand: 'Uint16' },
    { opcode: 0x28, command: 'DEMO', callback: lc.DEMO, operand: 'Uint8' },
    { opcode: 0x29, command: 'COL_DECORS', callback: lc.COL_DECORS, operand: 'Uint8' },
    { opcode: 0x2A, command: 'COL_DECORS_OBJ', callback: lc.COL_DECORS_OBJ, param: 'Uint8:actor', operand: 'Uint8' },
    { opcode: 0x2B, command: 'PROCESSOR', callback: lc.PROCESSOR, operand: 'Uint8' },
    { opcode: 0x2C, command: 'OBJECT_DISPLAYED', callback: lc.OBJECT_DISPLAYED, param: 'Uint8', operand: 'Uint8' },
    { opcode: 0x2D, command: 'ANGLE_OBJ', callback: lc.ANGLE_OBJ, param: 'Uint8:actor', operand: 'Uint16' }
];
