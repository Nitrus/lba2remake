import * as mv from '../process/move';
import * as cm from '../process/common';
import * as st from '../process/structural';
import Indent from '../indent';

export const MoveOpcode = [
    { opcode: 0x00, command: 'END', callback: st.END, indent: Indent.ZERO },
    { opcode: 0x01, command: 'NOP', callback: st.NOP, indent: Indent.ONE },
    { opcode: 0x02, command: 'BODY', callback: cm.BODY, args: ['Int8'], indent: Indent.ONE },
    { opcode: 0x03, command: 'ANIM', callback: cm.ANIM, args: ['Uint16'], indent: Indent.ONE },
    { opcode: 0x04, command: 'GOTO_POINT', callback: mv.GOTO_POINT, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x05, command: 'WAIT_ANIM', callback: mv.WAIT_ANIM, indent: Indent.ONE },
    { opcode: 0x06, command: 'LOOP', callback: st.NOP, indent: Indent.ONE },
    { opcode: 0x07, command: 'ANGLE', callback: mv.ANGLE, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x08, command: 'POS_POINT', callback: cm.POS_POINT, args: ['Uint8:point'], indent: Indent.ONE },
    { opcode: 0x09, command: 'TRACK', callback: st.TRACK, args: ['Uint8'], indent: Indent.ZERO },
    { opcode: 0x0A, command: 'GOTO', callback: st.GOTO, args: ['Uint16:offset'], indent: Indent.ONE },
    { opcode: 0x0B, command: 'STOP', callback: st.STOP, indent: Indent.ONE },
    { opcode: 0x0C, command: 'GOTO_SYM_POINT', callback: mv.GOTO_SYM_POINT, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x0D, command: 'WAIT_NUM_ANIM', callback: mv.WAIT_NUM_ANIM, args: ['Uint8', 'Uint8'], indent: Indent.ONE },
    { opcode: 0x0E, command: 'SAMPLE', callback: mv.SAMPLE, args: ['Uint16'], skipSideScenes: true, indent: Indent.ONE },
    { opcode: 0x0F, command: 'GOTO_POINT_3D', callback: mv.GOTO_POINT_3D, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x10, command: 'SPEED', callback: mv.SPEED, args: ['Uint16'], indent: Indent.ONE },
    { opcode: 0x11, command: 'BACKGROUND', callback: mv.BACKGROUND, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x12, command: 'WAIT_NUM_SECOND', callback: mv.WAIT_NUM_SECOND, args: ['Uint8', 'Uint32'], indent: Indent.ONE },
    { opcode: 0x13, command: 'NO_BODY', callback: cm.NO_BODY, indent: Indent.ONE },
    { opcode: 0x14, command: 'BETA', callback: cm.BETA, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x15, command: 'OPEN_LEFT', callback: mv.OPEN_LEFT, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x16, command: 'OPEN_RIGHT', callback: mv.OPEN_RIGHT, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x17, command: 'OPEN_UP', callback: mv.OPEN_UP, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x18, command: 'OPEN_DOWN', callback: mv.OPEN_DOWN, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x19, command: 'CLOSE', callback: mv.CLOSE, indent: Indent.ONE },
    { opcode: 0x1A, command: 'WAIT_DOOR', callback: mv.WAIT_DOOR, indent: Indent.ONE },
    { opcode: 0x1B, command: 'SAMPLE_RND', callback: mv.SAMPLE_RND, args: ['Int16'], skipSideScenes: true, indent: Indent.ONE },
    { opcode: 0x1C, command: 'SAMPLE_ALWAYS', callback: mv.SAMPLE_ALWAYS, args: ['Int16'], skipSideScenes: true, indent: Indent.ONE },
    { opcode: 0x1D, command: 'SAMPLE_STOP', callback: mv.SAMPLE_STOP, args: ['Int16'], skipSideScenes: true, indent: Indent.ONE },
    { opcode: 0x1E, command: 'PLAY_SMK', callback: mv.PLAY_ACF, indent: Indent.ONE },
    { opcode: 0x1F, command: 'REPEAT_SAMPLE', callback: mv.REPEAT_SAMPLE, args: ['Int16'], skipSideScenes: true, indent: Indent.ONE },
    { opcode: 0x20, command: 'SIMPLE_SAMPLE', callback: mv.SIMPLE_SAMPLE, args: ['Int16'], skipSideScenes: true, indent: Indent.ONE },
    { opcode: 0x21, command: 'FACE_HERO', callback: mv.FACE_HERO, args: ['Uint16'], indent: Indent.ONE },
    { opcode: 0x22, command: 'ANGLE_RND', callback: mv.ANGLE_RND, args: ['Int16', 'Uint16'], indent: Indent.ONE },
    { opcode: 0x23, command: 'REPLACE', callback: mv.REPLACE, indent: Indent.ZERO },
    { opcode: 0x24, command: 'WAIT_NUM_DSEC', callback: mv.WAIT_NUM_DSEC, args: ['Uint8', 'Uint32'], indent: Indent.ONE },
    { opcode: 0x25, command: 'DO', callback: st.NOP, indent: Indent.ONE },
    { opcode: 0x26, command: 'SPRITE', callback: mv.SPRITE, args: ['Int16'], indent: Indent.ONE },
    { opcode: 0x27, command: 'WAIT_NUM_SECOND_RND', callback: mv.WAIT_NUM_SECOND_RND, args: ['Uint8', 'Uint32'], indent: Indent.ONE },
    { opcode: 0x28, command: 'AFF_TIMER', callback: st.NOP, indent: Indent.ONE },
    { opcode: 0x29, command: 'SET_FRAME', callback: mv.SET_FRAME, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x2A, command: 'SET_FRAME_3DS', callback: mv.SET_FRAME_3DS, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x2B, command: 'SET_START_3DS', callback: mv.SET_START_3DS, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x2C, command: 'SET_END_3DS', callback: mv.SET_END_3DS, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x2D, command: 'START_ANIM_3DS', callback: mv.START_ANIM_3DS, args: ['Uint8'], indent: Indent.ONE },
    { opcode: 0x2E, command: 'STOP_ANIM_3DS', callback: mv.STOP_ANIM_3DS, indent: Indent.ONE },
    { opcode: 0x2F, command: 'WAIT_ANIM_3DS', callback: mv.WAIT_ANIM_3DS, indent: Indent.ONE },
    { opcode: 0x30, command: 'WAIT_FRAME_3DS', callback: mv.WAIT_FRAME_3DS, indent: Indent.ONE },
    { opcode: 0x31, command: 'WAIT_NUM_DECIMAL_RND', callback: mv.WAIT_NUM_DECIMAL_RND, args: ['Uint8', 'Uint32'], indent: Indent.ONE },
    { opcode: 0x32, command: 'INTERVAL', callback: mv.INTERVAL, args: ['Uint16'], indent: Indent.ONE },
    { opcode: 0x33, command: 'FREQUENCY', callback: mv.FREQUENCY, args: ['Uint16'], skipSideScenes: true, indent: Indent.ONE },
    { opcode: 0x34, command: 'VOLUME', callback: mv.VOLUME, args: ['Uint8'], skipSideScenes: true, indent: Indent.ONE }
];

